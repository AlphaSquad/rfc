# Evaluation Output Specification

*  Version: 0.1.0
*  Maintainer: Peter Belmann pbelmann@cebitec.uni-bielefeld.de

An evaluation container should produce a yaml file that consists out of an array of outputs an evaluation method will produce. 
Please see below for a description.


### General Definition

This YAML has the following structure: 

```YAML
---
version: NUMBER.NUMBER.NUMBER
results: ARRAY
```

* version **(Required)**: Version number must match the regular expression `[0-9\.]` 

* results **(Required)**: The results property must have an array as value. Each results item consists out of the 
following properties:

### Results Item

* title **(Required)**: 

  Title is an arbitrary String.

* type **(Required)**

  Type attribute has the following structure:

```YAML
  type:
    name: txt|png|html|tsv|csv
    options: OPTIONS
```
  
  * name **(Required)**
   
    Name must be one of the types:
   
    * txt
  
    * png 
  
    * html
  
    * tsv
  
    * csv
    
  * options 
   
    The option parameter can have multiple properties. The following properties are allowed: 

      * separator: The value for this is a String that represents the separation between the data. 

* data **(Required)**

  The data field is just allowed to have one property and that must be one of the following:

  * reference: 
  
    The reference property indicates that the data for this type is in another file. The value is always an absolute path to the file.

  * inline: 
   
    Inline property contains the data for this type. 

* description **(Required)**

  Description for the evaluation method. The value for this field must be one of the following:

  * reference: 
  
    The reference property indicates that the description for this type is in another file. 
    The value is always an absolute path to the file.

  * inline: 
   
    Inline property contains the description for this type. 

## Example

```YAML
version: 0.1.0
results:
  - title: text1
    type:
      name: txt
      options:
       separator: "\t"
    data:
      inline: my text
  - title: text2
    type:
      name: txt
    description:
      inline: my description
    data:
      reference: /path/to/reference1
```
